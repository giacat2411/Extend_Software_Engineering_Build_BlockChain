# -*- coding: utf-8 -*-
"""BigchainDB example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N8MKtJQ9g_8jpZzS6Kj7H7PmY3YIAw47

## Cài đặt BigchainDB
Chạy ở terminal
"""

# !pip3 install --upgrade setuptools
# !sudo apt-get update
# !sudo apt-get install python3-dev libssl-dev libffi-dev
# !pip3 install bigchaindb_driver

"""## Lưu object bằng transaction
### Kết nối đến BigchainDB


"""

from bigchaindb_driver import BigchainDB
from bigchaindb_driver.common.utils import serialize
from bigchaindb_driver.crypto import generate_keypair
import json
 
bdb_root_url = 'https://test.ipdb.io'
 
bdb = BigchainDB(bdb_root_url)
 
test_data = {
    'data': {
        'Area' : 50,
        'AreaHome' : 200,
        'Bedrooms' : 6,
        'Bathrooms' : 6,
        'id' : 'H1234',
        'Owner' : 111000222,
        'Price' : 10000000000
    }
}
 
user = generate_keypair()

print(user)

"""### Tạo transaction"""

# Prepare new transaction
prepare_creation = bdb.transactions.prepare(
    operation='CREATE',
    signers=user.public_key,
    asset=test_data,
)
 
print('PREPARE:')
print(json.dumps(prepare_creation, indent=4))
print()

"""### Ký và gửi transaction"""

# Sign the transaction
fulfilled_creation = bdb.transactions.fulfill(
    prepare_creation, user.private_key
)
 
print('FULFILL:')
print(json.dumps(fulfilled_creation, indent=4))
print()
 
# Send the transaction to BigchainDB
sent_creation = bdb.transactions.send_commit(fulfilled_creation)
print('sent_creation == fulfilled_creation: ', sent_creation == fulfilled_creation)
print()

"""## Thay đổi object
### Tìm kiếm object
"""

# Print transaction id
trans_id = fulfilled_creation['id']
print('trans_id: ', trans_id)
print()
 
# Search assets by id
asset_searched = bdb.assets.get(search='H1234')
print('ASSETS SEARCHED:')
print(json.dumps(asset_searched, indent=4))
print()

asset_searched = asset_searched[-1]
asset_id = asset_searched['id']

transfer_asset = {
    'id' : asset_id
}
 
data_changed = {
    'data' : {
        'Owner' : 111222333
    }
}
 
output_index = 0
#  last_transaction 
# output = fulfilled_creation['outputs'][output_index]
output = last_transaction

transfer_input = {
    'fulfillment': output['condition']['details'],
    'fulfills': {
    'output_index': output_index,
    'transaction_id': fulfilled_creation['id'],
    },
    'owners_before': output['public_keys'],
}
 
prepare_creation = bdb.transactions.prepare(
    operation='TRANSFER',
    asset = transfer_asset,
    inputs = transfer_input,
    metadata= data_changed,
    recipients=user.public_key
)
 
fulfilled_creation = bdb.transactions.fulfill(
    prepare_creation,
    private_keys=user.private_key
)
 
sent_creation = bdb.transactions.send_commit(fulfilled_creation)

"""### Danh sách các transaction liên quan đến object"""

# List of transactions by id
transactions = bdb.transactions.get(asset_id=asset_id)
print('TRANSACTIONS:')
print(json.dumps(transactions, indent=4))

"""#"""